- name: get vault status
  import_tasks: status.yml

- name: vault initialized 
  ansible.builtin.command:
    cmd: vault operator init -key-shares=1 -key-threshold=1 -format=yaml
  register: vault_operator_init
  when:
    - not vault_status.initialized

- name: vault_init_output is saved
  ansible.builtin.set_fact:
    vault_init_output: "{{ vault_operator_init.stdout | from_yaml }}"
  when:
    - vault_operator_init is defined
    - vault_operator_init.stdout is defined

- name: vault keys are saved
  block:
    - name: hashi_vault_unseal_keys is set
      ansible.builtin.set_fact:
        hashi_vault_unseal_keys: "{{ vault_init_output.unseal_keys_b64 }}"
    - name: show unseal information
      block:
        - name: show unseal keys
          ansible.builtin.debug:
            msg: "{{ hashi_vault_unseal_keys }}"
        - name: show root token
          ansible.builtin.debug:
            msg: "{{ vault_init_output.root_token }}"
          when: vault_init_output.root_token is defined
  when:
    - vault_init_output is defined and
      vault_init_output.unseal_keys_b64 is defined and
      vault_init_output.unseal_keys_b64 is iterable

- name: .profile contains vault envs
  lineinfile:
    path: ~/.profile
    line: "{{ item }}"
    state: present
  with_items:
    - "export VAULT_ADDR={{ hashi_vault_api_address }}"
    - "export VAULT_TOKEN={{ vault_init_output.root_token }}"

- name: get vault status
  import_tasks: status.yml

- name: check if vault is initialized
  ansible.builtin.assert:
    that:
      - vault_status.initialized | bool
    quiet: yes

